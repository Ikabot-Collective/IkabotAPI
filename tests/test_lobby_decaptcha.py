import base64
import io

import pytest

from app.lobby_captcha.image import break_interactive_captcha

text_image = "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"
drag_icons = ""


def from_base64(base64string):
    return io.BytesIO(base64.b64decode(base64string))


def test_lobby_captcha():
    text = from_base64(text_image).read()
    icons = from_base64(drag_icons).read()
    result = break_interactive_captcha(text, icons)
    assert result == 2, f"Expected 2, got {result}"
